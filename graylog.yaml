---
# Source: graylog/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: graylog
  labels:
    helm.sh/chart: graylog-2.1.3
    app.kubernetes.io/name: graylog
    app.kubernetes.io/instance: "graylog"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "4.2.7"
spec:
  serviceName: graylog
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: graylog
      app.kubernetes.io/instance: "graylog"
      app.kubernetes.io/managed-by: "Helm"
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        helm.sh/chart: graylog-2.1.3
        app.kubernetes.io/name: graylog
        app.kubernetes.io/instance: "graylog"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/version: "4.2.7"
      annotations:
    spec:
      serviceAccountName: graylog

      securityContext:
        {}
      initContainers:
        - name: "setup"
          image: alpine
          imagePullPolicy: IfNotPresent
          # Graylog journal will recursive in every subdirectories. Any invalid format directories will cause errors
          command:
            - /bin/sh
            - -c
            - |
              rm -rf /usr/share/graylog/data/journal/lost+found
              wget https://storage.googleapis.com/kubernetes-release/release/v1.24.0/bin/linux/amd64/kubectl -O /k8s/kubectl
              chmod +x /k8s/kubectl

              GRAYLOG_HOME=/usr/share/graylog
              chown -R 1100:1100 ${GRAYLOG_HOME}/data/
          env:
          volumeMounts:
            - name: journal
              mountPath: /usr/share/graylog/data/journal
            - name: kubectl
              mountPath: /k8s
      containers:
        - name: graylog-server
          image: "graylog/graylog:4.2.3-1"
          imagePullPolicy: "IfNotPresent"
          command:
            - /entrypoint.sh
          env:
            - name: GRAYLOG_SERVER_JAVA_OPTS
              value: "-Dlog4j2.formatMsgNoLookups=true -Djdk.tls.acknowledgeCloseNotify=true -XX:+UnlockExperimentalVMOptions -XX:NewRatio=1 -XX:MaxMetaspaceSize=256m -server -XX:+ResizeTLAB -XX:-OmitStackTraceInFastThrow -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
            - name: GRAYLOG_PASSWORD_SECRET
              valueFrom:
                secretKeyRef:
                  name: graylog
                  key: graylog-password-secret
            - name: GRAYLOG_ROOT_PASSWORD_SHA2
              valueFrom:
                secretKeyRef:
                  name: graylog
                  key: graylog-password-sha2
          securityContext:
            privileged: false
          ports:
            - containerPort: 9000
              name: graylog
            - containerPort: 5514
              name: syslog
              protocol: UDP
            - containerPort: 6514
              name: network
              protocol: UDP
            - containerPort: 7514
              name: firewall
              protocol: UDP
            - containerPort: 12201
              name: kubernetes
              protocol: UDP
          resources:
            limits:
              cpu: "1"
            requests:
              cpu: 500m
              memory: 1024Mi
          startupProbe:
            httpGet:
              path: /api/system/lbstatus
              port: 9000
            periodSeconds: 60
            failureThreshold: 3
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /api/system/lbstatus
              port: 9000
            initialDelaySeconds: 0
            periodSeconds: 30
            failureThreshold: 3
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /api/system/lbstatus
              port: 9000
            initialDelaySeconds: 0
            periodSeconds: 10
            failureThreshold: 3
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - name: journal
              mountPath: /usr/share/graylog/data/journal
            - name: config
              mountPath: /usr/share/graylog/config
            - name: entrypoint
              mountPath: /entrypoint.sh
              subPath: entrypoint.sh
            - name: kubectl
              mountPath: /k8s
          
      terminationGracePeriodSeconds: 120
      volumes:
        - name: config
          configMap:
            name: graylog
            items:
              - key: graylog.conf
                path: graylog.conf
                mode: 292 # 0444
              - key: log4j2.xml
                path: log4j2.xml
                mode: 292 # 0444
        - name: entrypoint
          configMap:
            name: graylog
            items:
              - key: entrypoint.sh
                path: entrypoint.sh
                mode: 365 # 0555
        - name: kubectl
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: journal
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "200Gi"
---
# Source: graylog/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt"
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  labels:
    helm.sh/chart: graylog-2.1.3
    app.kubernetes.io/name: graylog
    app.kubernetes.io/instance: "graylog"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/version: "4.2.7"
    app.kubernetes.io/component: "web"
  name: graylog-web
spec:
  rules:
    - host: it-graylog.dev.lsst.org
      http:
        paths:
          
          - backend:
              serviceName: graylog-web
              servicePort: graylog
            path: /
  tls:
    - hosts:
      - it-graylog.dev.lsst.org
      secretName: graylog-tls
---
# Source: graylog/charts/elasticsearch/templates/test/test-elasticsearch-health.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "graylog-thvok-test"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  securityContext:
    fsGroup: 1000
    runAsUser: 1000
  containers:
  - name: "graylog-cqktk-test"
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.10.2"
    imagePullPolicy: "IfNotPresent"
    command:
      - "sh"
      - "-c"
      - |
        #!/usr/bin/env bash -e
        curl -XGET --fail 'elasticsearch-master:9200/_cluster/health?wait_for_status=green&timeout=1s'
  restartPolicy: Never
