[[servers]]
host = "139.229.135.6"
port = 389
use_ssl = false
start_tls = false
ssl_skip_verify = false

bind_dn = "uid=svc_grafana,cn=users,cn=accounts,dc=lsst,dc=cloud"
bind_password = 'hAe@rV7yHRYv'

# User search filter, for example "(cn=%s)" or "(sAMAccountName=%s)" or "(uid=%s)"
search_filter = "(uid=%s)"

# An array of base dns to search through
search_base_dns = ["cn=users,cn=accounts,dc=lsst,dc=cloud"]

## For Posix or LDAP setups that does not support member_of attribute you can define the below settings
## Please check grafana LDAP docs for examples
group_search_filter = "(&(objectClass=groupOfNames)(cn=grafana*))"
group_search_base_dns = ["cn=groups,cn=accounts,dc=lsst,dc=cloud"]
group_search_filter_user_attribute = "cn"

# Specify names of the ldap attributes your ldap uses
[servers.attributes]
name = "givenName"
surname = "sn"
username = "cn"
member_of = "memberOf"
email =  "email"

# Map ldap groups to grafana org roles
[[servers.group_mappings]]
group_dn = "cn=grafana-admin,cn=groups,cn=accounts,dc=lsst,dc=cloud"
org_role = "Admin"

[[servers.group_mappings]]
group_dn = "cn=grafana-editor,cn=groups,cn=accounts,dc=lsst,dc=cloud"
org_role = "Editor"

[[servers.group_mappings]]
# If you want to match all (or no ldap groups) then you can use wildcard
group_dn = "cn=grafana-viewer,cn=groups,cn=accounts,dc=lsst,dc=cloud"
org_role = "Viewer"