---
# Source: fluent-bit/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: it-fluentbit-fluent-bit
  labels:
    helm.sh/chart: fluent-bit-0.20.1
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: it-fluentbit
    app.kubernetes.io/version: "1.9.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: fluent-bit/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: it-fluentbit-fluent-bit
  labels:
    helm.sh/chart: fluent-bit-0.20.1
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: it-fluentbit
    app.kubernetes.io/version: "1.9.3"
    app.kubernetes.io/managed-by: Helm
data:
  custom_parsers.conf: |
    [PARSER]
        Name docker
        Format json
        Time_Key time
        Time_Keep Off
        Time_Format %Y-%m-%dT%H:%M:%S.%L
    
  fluent-bit.conf: |
    [SERVICE]
        Daemon Off
        Flush 1
        Log_Level info
        Parsers_File parsers.conf
        Parsers_File custom_parsers.conf
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port 2020
        Health_Check On
    
    [INPUT]
        Name tail
        Path /var/log/containers/*.log
        multiline.parser docker, cri
        Tag kube.*
        Mem_Buf_Limit 5MB
        Skip_Long_Lines On
    
    [FILTER]
        Name kubernetes
        Match kube.*
        Merge_Log On
        Keep_Log Off
        K8S-Logging.Parser On
        K8S-Logging.Exclude On
    
    [OUTPUT]
        Name gelf
        Match kube.*
        Host collector.cp.lsst.org
        Port 5514
        Mode tcp
        Gelf_Short_Message_Key  data
    
    [OUTPUT]
        Name es
        Match host.*
        Host elasticsearch-master
        Logstash_Format On
        Logstash_Prefix node
        Retry_Limit False
---
# Source: fluent-bit/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: it-fluentbit-fluent-bit
  labels:
    helm.sh/chart: fluent-bit-0.20.1
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: it-fluentbit
    app.kubernetes.io/version: "1.9.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
    verbs:
      - get
      - list
      - watch
---
# Source: fluent-bit/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: it-fluentbit-fluent-bit
  labels:
    helm.sh/chart: fluent-bit-0.20.1
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: it-fluentbit
    app.kubernetes.io/version: "1.9.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: it-fluentbit-fluent-bit
subjects:
  - kind: ServiceAccount
    name: it-fluentbit-fluent-bit
    namespace: it-fluentbit
---
# Source: fluent-bit/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: it-fluentbit-fluent-bit
  labels:
    helm.sh/chart: fluent-bit-0.20.1
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: it-fluentbit
    app.kubernetes.io/version: "1.9.3"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 2020
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: it-fluentbit
---
# Source: fluent-bit/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: it-fluentbit-fluent-bit
  labels:
    helm.sh/chart: fluent-bit-0.20.1
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: it-fluentbit
    app.kubernetes.io/version: "1.9.3"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: fluent-bit
      app.kubernetes.io/instance: it-fluentbit
  template:
    metadata:
      annotations:
        checksum/config: 486a97d8ef193b2bccda4a03a01817430bbd78f7e019b915e1a5bb72fc982c0c
        checksum/luascripts: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      labels:
        app.kubernetes.io/name: fluent-bit
        app.kubernetes.io/instance: it-fluentbit
    spec:
      serviceAccountName: it-fluentbit-fluent-bit
      hostNetwork: false
      dnsPolicy: ClusterFirst
      containers:
        - name: fluent-bit
          image: "cr.fluentbit.io/fluent/fluent-bit:1.9.3"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 2020
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: http
          volumeMounts:
            - mountPath: /fluent-bit/etc/fluent-bit.conf
              name: config
              subPath: fluent-bit.conf
            - mountPath: /fluent-bit/etc/custom_parsers.conf
              name: config
              subPath: custom_parsers.conf
      volumes:
        - name: config
          configMap:
            name: it-fluentbit-fluent-bit
---
# Source: fluent-bit/templates/hpa.yaml
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: it-fluentbit-fluent-bit
  labels:
    helm.sh/chart: fluent-bit-0.20.1
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: it-fluentbit
    app.kubernetes.io/version: "1.9.3"
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: it-fluentbit-fluent-bit
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          averageUtilization: 75
          type: Utilization
---
# Source: fluent-bit/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: it-fluentbit-fluent-bit
  labels:
    helm.sh/chart: fluent-bit-0.20.1
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/instance: it-fluentbit
    app.kubernetes.io/version: "1.9.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
spec:
  tls:
    - hosts:
        - "it-fluentbit.cp.lsst.org"
      secretName: fluentbit-tls
  rules:
    - host: "it-fluentbit.cp.lsst.org"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: it-fluentbit-fluent-bit
                port:
                  number: 2020
